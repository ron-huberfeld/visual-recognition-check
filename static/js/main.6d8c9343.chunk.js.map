{"version":3,"sources":["components/ServiceContainer/images/r-pic22.jpg","components/ServiceContainer/images/r-pic16.jpg","components/ServiceContainer/images/r-pic12.jpg","hooks/useScript.js","components/Header/Header.js","components/Header/index.js","components/ImagePicker/ImagePicker.js","components/Loader/Loader.js","components/UploadImage/UploadImage.js","components/DetectionBox/DetectionBox.js","components/ImagePanel/ImagePanel.js","components/ImageContainer/index.js","components/ImageContainer/ImageContainer.js","components/Toast/Toast.js","components/Toast/index.js","components/ServiceContainer/ServiceContainer.js","components/ServiceContainer/index.js","components/ServiceContainer/Utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useScript","url","useEffect","script","document","createElement","src","async","body","appendChild","removeChild","Header","description","links","title","Tile","className","map","link","defaultProps","ImagePicker","images","onClick","image","i","key","id","handleClick","alt","Loader","loadingMessage","UploadImage","onUpload","multiple","onDrop","acceptedFiles","getRootProps","getInputProps","DetectionBox","locationData","item","index","left","location","top","width","height","color","object","style","backgroundSize","position","borderColor","ImagePanel","showLoader","viewerImage","pickerImages","onSelectTile","files","viewerType","ImageContainer","onSubmitImage","handleUnsupportedFormats","isClassifying","results","defaultImageUrl","useState","mainDisplayImage","setMainDisplayImage","tileId","selectedImage","image_file","submitSampleImage","includes","type","reader","FileReader","onabort","console","log","onerror","onload","imageData","result","image_data","readAsDataURL","submitUserImage","Toast","caption","children","hideAfterFirstDisplay","hideCloseButton","iconDescription","kind","lowContrast","onCloseButtonClick","role","subtitle","timeout","setId","hideToast","setHideToast","Math","random","toString","substring","element","querySelector","undefined","window","localStorage","getItem","setItem","sampleImages","pic1","pic2","pic3","ServiceContainer","setIsClassifying","setResults","error","setError","onClassify","a","fetch","method","headers","Accept","JSON","stringify","then","response","json","data","objects","collections","catch","err","message","finally","HEADER_LINKS","Link","target","rel","href","Button","renderIcon","Launch16","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d8c9343.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/r-pic22.dc634cb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r-pic16.257e9a12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r-pic12.0cc70e37.jpg\";","import { useEffect } from 'react';\n\nconst useScript = url => {\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [url]);\n};\n\nexport default useScript;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tile } from 'carbon-components-react';\n\nexport const Header = ({ description, links, title }) => (\n  <Tile className=\"header\">\n    <div className=\"title-container\">\n      <h3 className=\"header-title\">{title}</h3>\n      <p>{description}</p>\n    </div>\n    <div className=\"link-container\">\n      <div className=\"link-wrapper\">{links.map(link => link)}</div>\n    </div>\n  </Tile>\n);\n\nHeader.propTypes = {\n  description: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  description: '',\n  links: [],\n  title: '',\n};\n\nexport default Header;\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SelectableTile\n} from 'carbon-components-react';\n\nexport const ImagePicker = ({\n  images,\n  onClick,\n}) => {\n\n  const onImageClick = (id) => {\n    onClick(id);\n  }\n\n  return (\n    images.map((image, i) => {\n      return (\n        <div key={i} className=\"image-picker--section__tile\">\n          <SelectableTile\n            id={`tile-${i}`}\n            handleClick={() => { onImageClick(i); }}\n          >\n            <img className=\"image-picker--section__image\"\n              src={image.url}\n              alt={image.alt}\n            />\n          </SelectableTile>\n        </div>\n      );\n    })\n  );\n}\n\nImagePicker.propTypes = {\n  images: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImagePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({ loadingMessage }) => (\n  <span className=\"loader\">\n    <div className=\"loader-container\">\n      <div className=\"loader-dots\" />\n      {(loadingMessage) ? (\n        <div className=\"loader-message\">\n          <p className=\"ibm-type-a\">{loadingMessage}</p>\n        </div>\n      ) : null}\n    </div>\n  </span>\n);\n\nLoader.propTypes = {\n  loadingMessage: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  loadingMessage: null,\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport {\n  SelectableTile\n} from 'carbon-components-react';\nimport Upload32 from '@carbon/icons-react/lib/upload/32';\n\nexport const UploadImage = ({\n  onUpload,\n}) => {\n  return (\n    <div className=\"image-picker--section__tile\">\n      <SelectableTile\n        id=\"123\"\n        handleClick={() => {}}\n      >\n        <Dropzone\n          multiple={false}\n          onDrop={(acceptedFiles) => { onUpload(acceptedFiles); }}\n        >\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()} className=\"upload-image\">\n              <input {...getInputProps()} />\n              <Upload32 />\n              <p className=\"upload-text\">Select or drag an image</p>\n            </div>\n          )}\n        </Dropzone>\n      </SelectableTile>\n  </div>\n);\n}\n\nUploadImage.propTypes = {\n  onUpload: PropTypes.func.isRequired,\n};\n\nexport default UploadImage;\n","import React from 'react';\nimport './_DetectionBox.scss';\n\nconst DetectionBox = ({ locationData }) => (\n  <>\n    {locationData\n      ? locationData.map((item, index) => {\n          let left = item.location.left;\n          let top = item.location.top;\n          let width = item.location.width;\n          let height = item.location.height;\n          let color = item.object === 'mask' ? 'green' : 'red';\n          return (\n            <span className=\"face-mark2\" key={index}>\n              <div\n                className=\"face-mark3\"\n                style={{\n                  backgroundSize: 'contain',\n                  position: 'absolute',\n                  borderColor: color,\n                  height: `${height}px`,\n                  width: `${width}px`,\n                  top: `${top}px`,\n                  left: `${left}px`,\n                }}\n              />\n            </span>\n          );\n        })\n      : null}\n  </>\n);\n\nexport default DetectionBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImagePicker from '../ImagePicker/ImagePicker';\nimport Loader from '../Loader/Loader';\nimport UploadImage from '../UploadImage/UploadImage';\nimport DetectionBox from '../DetectionBox/DetectionBox';\n\nconst ImagePanel = ({\n  showLoader,\n  viewerImage,\n  pickerImages,\n  onSelectTile,\n  onUpload,\n  locationData,\n}) => {\n  return (\n    <div className=\"main-image-picker__container\">\n      <div className=\"main-image-picker\">\n        <div>\n          <img\n            className=\"main-image-picker__image\"\n            src={viewerImage}\n            alt=\"main\"\n          />\n          {showLoader ? <Loader /> : null}\n          {showLoader ? null : <DetectionBox locationData={locationData} />}\n        </div>\n      </div>\n      <div className=\"image-selection__container\">\n        <div className=\"image-picker__tiles\">\n          <ImagePicker\n            images={pickerImages}\n            onClick={(id) => {\n              onSelectTile(id);\n            }}\n          />\n          <UploadImage\n            onUpload={(files) => {\n              onUpload(files);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nImagePanel.propTypes = {\n  showLoader: PropTypes.bool.isRequired,\n  viewerImage: PropTypes.string.isRequired,\n  pickerImages: PropTypes.array.isRequired,\n  onSelectTile: PropTypes.func.isRequired,\n  onUpload: PropTypes.func.isRequired,\n  viewerType: PropTypes.string,\n};\n\nImagePanel.defaultProps = {\n  viewerType: 'image',\n};\n\nexport default ImagePanel;\n","import ImageContainer from './ImageContainer';\nexport default ImageContainer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tile } from 'carbon-components-react';\nimport ImagePanel from '../ImagePanel/ImagePanel';\n\nexport const ImageContainer = ({\n  images,\n  onSubmitImage,\n  handleUnsupportedFormats,\n  isClassifying,\n  results,\n}) => {\n  let defaultImageUrl = '';\n  if (images[0] && images[0].url) {\n    defaultImageUrl = images[0].url;\n  }\n  const [mainDisplayImage, setMainDisplayImage] = useState(defaultImageUrl);\n\n  const submitSampleImage = (tileId) => {\n    const selectedImage = images[tileId].url;\n    onSubmitImage({ image_file: selectedImage });\n    setMainDisplayImage(selectedImage);\n  };\n\n  const submitUserImage = (images) => {\n    const image = images[0];\n    const acceptedImageTypes = [\n      'image/gif',\n      'image/png',\n      'image/jpg',\n      'image/jpeg',\n    ];\n    if (!acceptedImageTypes.includes(image.type)) {\n      handleUnsupportedFormats();\n    } else {\n      const reader = new FileReader();\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.onload = () => {\n        const imageData = reader.result;\n        setMainDisplayImage(imageData);\n        onSubmitImage({ image_data: imageData });\n      };\n      reader.readAsDataURL(image);\n    }\n  };\n\n  return (\n    <Tile className=\"input-container\">\n      <ImagePanel\n        showLoader={isClassifying}\n        viewerImage={mainDisplayImage}\n        pickerImages={images}\n        onSelectTile={(tileId) => {\n          submitSampleImage(tileId);\n        }}\n        onUpload={(images) => {\n          submitUserImage(images);\n        }}\n        locationData={results}\n      />\n      {/* <h4 className=\"container-footer\">Select An Image to Analyze</h4> */}\n    </Tile>\n  );\n};\n\nImageContainer.propTypes = {\n  onSubmitImage: PropTypes.func.isRequired,\n  handleUnsupportedFormats: PropTypes.func.isRequired,\n  isClassifying: PropTypes.bool.isRequired,\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageContainer;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastNotification } from 'carbon-components-react';\n\nconst NOTIFICATION_HAS_BEEN_SEEN = 'notificationHasBeenSeen';\n\nexport const Toast = ({\n  caption,\n  children,\n  className,\n  hideAfterFirstDisplay,\n  hideCloseButton,\n  iconDescription,\n  kind,\n  lowContrast,\n  onCloseButtonClick,\n  role,\n  subtitle,\n  timeout,\n  title,\n}) => {\n  const [id, setId] = useState();\n  const [hideToast, setHideToast] = useState(false);\n\n  useEffect(() => {\n    setId(\n      Math.random()\n        .toString(36)\n        .substring(2, 15) +\n        Math.random()\n          .toString(36)\n          .substring(2, 15),\n    );\n  }, []);\n\n  useEffect(() => {\n    const element = document.querySelector(`.custom-toast-${id}`);\n    if (element) {\n      element.className += 'enter';\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      hideAfterFirstDisplay &&\n      typeof window !== undefined &&\n      typeof window.localStorage !== undefined &&\n      window.localStorage.getItem(NOTIFICATION_HAS_BEEN_SEEN) === 'true'\n    ) {\n      setHideToast(true);\n    }\n  }, [hideAfterFirstDisplay]);\n\n  return hideToast ? null : (\n    <ToastNotification\n      caption={caption}\n      className={`custom-toast-${id} ${className}`}\n      hideCloseButton={hideCloseButton}\n      iconDescription={iconDescription}\n      kind={kind}\n      lowContrast={lowContrast}\n      onCloseButtonClick={() => {\n        if (\n          hideAfterFirstDisplay &&\n          typeof window !== undefined &&\n          typeof window.localStorage !== undefined\n        ) {\n          window.localStorage.setItem(NOTIFICATION_HAS_BEEN_SEEN, 'true');\n        }\n        onCloseButtonClick();\n      }}\n      role={role}\n      subtitle={subtitle}\n      timeout={timeout}\n      title={title}\n    >\n      {children}\n    </ToastNotification>\n  );\n};\n\nToast.propTypes = {\n  caption: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  hideAfterFirstDisplay: PropTypes.bool,\n  hideCloseButton: PropTypes.bool,\n  iconDescription: PropTypes.string,\n  kind: PropTypes.string,\n  lowContrast: PropTypes.bool,\n  onCloseButtonClick: PropTypes.func,\n  role: PropTypes.string,\n  subtitle: PropTypes.string,\n  timeout: PropTypes.number,\n  title: PropTypes.string,\n};\n\nToast.defaultProps = {\n  caption: '',\n  children: null,\n  className: '',\n  hideAfterFirstDisplay: true,\n  hideCloseButton: false,\n  iconDescription: 'closes notification',\n  kind: 'error',\n  lowContrast: false,\n  onCloseButtonClick: () => {},\n  role: 'alert',\n  subtitle: '',\n  timeout: 0,\n  title: '',\n};\n\nexport default Toast;","import Toast from './Toast';\n\nexport default Toast;","import React, { useState } from 'react';\nimport ImageContainer from '../ImageContainer';\n// import OutputContainer from '../OutputContainer/OutputContainer';\nimport Toast from '../Toast';\nimport { parseResponse, getDetectedObjects } from './Utils';\n// import sampleImages from '../../data/sampleImages.json';\n// import CarouselContainer from '../CarouselContainer/CarouselContainer';\n// import defaultResponse from '../../data/mockClassifyResponse.json';\nimport pic1 from './images/r-pic22.jpg';\nimport pic2 from './images/r-pic16.jpg';\nimport pic3 from './images/r-pic12.jpg';\n\nconst GDPR_DISCLAIMER =\n  'This system is for demonstration purposes only and is not intended to process Personal Data. No Personal Data is to be entered into this system as it may not have the necessary controls in place to meet the requirements of the General Data Protection Regulation (EU) 2016/679.';\n\nconst sampleImages = [\n  {\n    url: pic1,\n    alt: 'pic1',\n  },\n  {\n    url: pic2,\n    alt: 'pic2',\n  },\n  {\n    url: pic3,\n    alt: 'pic3',\n  },\n];\nexport const ServiceContainer = () => {\n  console.log(sampleImages)\n  const [isClassifying, setIsClassifying] = useState(false);\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleUnsupportedFormats = () => {\n    setError({\n      title: 'Invalid file format:',\n      description: 'Only JPGs, PNGs, and GIFs are supported',\n    });\n  };\n\n  const onClassify = async (image) => {\n    console.log(image);\n    setIsClassifying(true);\n    fetch('/api/classify', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(image),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n        if (data.error) {\n          setError(data.error);\n        } else {\n          setResults(parseResponse(data));\n        }\n      })\n      .catch((err) => {\n        setError({ title: err.message, description: err.message });\n      })\n      .finally(() => setIsClassifying(false));\n  };\n\n  return (\n    <div className=\"service-container\">\n      <Toast kind=\"info\" subtitle={GDPR_DISCLAIMER} />\n      {error && (\n        <Toast\n          kind=\"error\"\n          title={error.title}\n          subtitle={error.description}\n          hideAfterFirstDisplay={false}\n          timeout={5000}\n          onCloseButtonClick={() => setError(null)}\n        />\n      )}\n      <ImageContainer\n        onSubmitImage={(image) => {\n          onClassify(image);\n        }}\n        isClassifying={isClassifying}\n        images={sampleImages}\n        handleUnsupportedFormats={handleUnsupportedFormats}\n        results={getDetectedObjects(results)}\n      />\n      {/* <OutputContainer results={getDetectedObjects(results)} /> */}\n      {/* <CarouselContainer\n        isClassifying={isClassifying}\n        images={sampleImages}\n        onSubmitImage={(image) => {\n          onClassify(image);\n        }}\n        results={getDetectedObjects(results)}\n      /> */}\n    </div>\n  );\n};\n\nexport default ServiceContainer;\n","import ServiceContainer from './ServiceContainer';\nexport default ServiceContainer;\n","export const parseResponse = (response) => {\n  // console.log(response.result.images[0])\n  return response.result.images[0].objects.collections[0].objects;\n};\n\nexport const getDetectedObjects = (response) => {\n  // console.log(response)\n  return response;\n};\n","import React from 'react';\nimport './styles/main.scss';\nimport useScript from './hooks/useScript';\nimport Header from './components/Header';\nimport ServiceContainer from './components/ServiceContainer';\nimport { description, title } from './data/input.json';\nimport { Link, Button } from 'carbon-components-react';\nimport IbmCloud24 from '@carbon/icons-react/lib/ibm-cloud/24';\nimport Launch16 from '@carbon/icons-react/lib/launch/16';\nimport { default as Api124 } from '@carbon/icons-react/lib/API--1/24';\n\nconst HEADER_LINKS = [\n  <Link\n    className=\"link getting-started\"\n    key=\"distance-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://cloud.ibm.com/apidocs/visual-recognition\"\n  >\n    <Button className=\"link-button\" kind=\"tertiary\" renderIcon={Launch16}>\n      Social Distance\n    </Button>\n    <Api124 className=\"link-icon\" />\n  </Link>,\n  <Link\n    className=\"link getting-started\"\n    key=\"estimation-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://cloud.ibm.com/registration?target=%2Fcatalog%2Fservices%2Fvisual-recognition%3FhideTours%3Dtrue%26cm_mmc%3D-_-Watson%2BCore_Watson%2BCore%2B-%2BPlatform-_-WW_WW-_-wdc-ref%26cm_mmc%3D-_-Watson%2BCore_Watson%2BCore%2B-%2BPlatform-_-WW_WW-_-wdc-ref%26cm_mmca1%3D000000OF%26cm_mmca2%3D10000409&_ga=2.158846578.918027017.1572271296-1405764752.1539884377&_gac=1.250083700.1571850605.Cj0KCQjw3JXtBRC8ARIsAEBHg4m4g1PSkKQRoI6YUe4A-6ysul0ziiWU0DVbqlbWAQpq3721u-bxkd0aAkV3EALw_wcB&cm_mc_uid=83381689395615475202389&cm_mc_sid_50200000=82214471572470185115&cm_mc_sid_52640000=21949701572470185117&cm_mmc=Earned-_-Watson%20Core%20-%20Platform-_-WW_WW-_-intercom&cm_mmca1=000000OF&cm_mmca2=10000409\"\n  >\n    <Button className=\"link-button\" kind=\"tertiary\" renderIcon={Launch16}>\n      Spread Estimation\n    </Button>\n    <IbmCloud24 className=\"link-icon\" />\n  </Link>,\n  <Link\n    className=\"link getting-started\"\n    key=\"events-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href=\"https://github.com/watson-developer-cloud/visual-recognition-code-pattern\"\n  >\n    <Button className=\"link-button\" kind=\"tertiary\" renderIcon={Launch16}>\n      Events Log\n    </Button>\n    <IbmCloud24 className=\"link-icon\" />\n  </Link>,\n];\n\nexport const App = () => {\n  useScript(\n    'https://cdn.jsdelivr.net/gh/watson-developer-cloud/watson-developer-cloud.github.io@master/analytics.js',\n  );\n\n  return (\n    <div className=\"app-container\">\n      <Header description={description} links={HEADER_LINKS} title={title} />\n      <ServiceContainer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}